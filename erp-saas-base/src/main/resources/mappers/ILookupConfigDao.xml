<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhuoxun.it.base.dao.ILookupConfigDao">

    <!--基础字段返回信息配置 -->
    <resultMap id="BaseResultMap" type="com.zhuoxun.it.base.entity.LookupConfigVO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="key" jdbcType="VARCHAR" property="key" />
        <result column="value" jdbcType="VARCHAR" property="value" />
        <result column="looup_id" jdbcType="VARCHAR" property="looupId" />
        <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
        <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
        <result column="last_update_by" jdbcType="VARCHAR" property="lastUpdateBy" />
        <result column="last_update_date" jdbcType="TIMESTAMP" property="lastUpdateDate" />
    </resultMap>

    <!--基础字段信息配置 -->
    <sql id="Base_Column_List">
        `id`,`key`,`value`,`looup_id`,`created_by`,
        `created_date`,`last_update_by`,`last_update_date`
    </sql>

    <!--基础条件查询配置 -->
    <sql id="Base_Where_Clause">
        <where>
            <if test="entity.id != null">
                and `id` = #{entity.id,jdbcType=VARCHAR}
            </if>
            <if test="entity.key != null">
                and `key` = #{entity.key,jdbcType=VARCHAR}
            </if>
            <if test="entity.value != null">
                and `value` = #{entity.value,jdbcType=VARCHAR}
            </if>
            <if test="entity.looupId != null">
                and `looup_id` = #{entity.looupId,jdbcType=VARCHAR}
            </if>
            <if test="entity.createdBy != null">
                and `created_by` = #{entity.createdBy,jdbcType=VARCHAR}
            </if>
            <if test="entity.createdDate != null">
                and `created_date` = #{entity.createdDate,jdbcType=TIMESTAMP}
            </if>
            <if test="entity.lastUpdateBy != null">
                and `last_update_by` = #{entity.lastUpdateBy,jdbcType=VARCHAR}
            </if>
            <if test="entity.lastUpdateDate != null">
                and `last_update_date` = #{entity.lastUpdateDate,jdbcType=TIMESTAMP}
            </if>
        </where>
    </sql>

    <!--构造条件 -->
    <sql id="Wrapper_Where_Clause">
        <where>
            <foreach collection="wp.criterias" item="criteria" separator="or">
                <trim prefix="(" prefixOverrides="and" suffix=")">
                    <foreach collection="criteria.criterions" item="criterion">
                         <include refid="Wrapper_Where_Op_Clause"></include>
                    </foreach>
                </trim>
            </foreach>
        </where>
    </sql>

    <!--构造操作条件 -->
    <sql id="Wrapper_Where_Op_Clause">
        <choose>
            <when test="criterion.op.type == 'like' or criterion.op.type == 'notLike'">
                <choose>
                    <when test="criterion.attr == 'id'">
                        and LOWER(`id`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'key'">
                        and LOWER(`key`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'value'">
                        and LOWER(`value`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'looupId'">
                        and LOWER(`looup_id`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'createdBy'">
                        and LOWER(`created_by`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'createdDate'">
                        and LOWER(`created_date`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'lastUpdateBy'">
                        and LOWER(`last_update_by`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'lastUpdateDate'">
                        and LOWER(`last_update_date`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <otherwise>
                        and false
                    </otherwise>
                </choose>
            </when>
            <otherwise>
                <choose>
                    <when test="criterion.attr == 'id'">
                        and `id`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'key'">
                        and `key`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'value'">
                        and `value`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'looupId'">
                        and `looup_id`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'createdBy'">
                        and `created_by`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'createdDate'">
                        and `created_date`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'lastUpdateBy'">
                        and `last_update_by`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'lastUpdateDate'">
                        and `last_update_date`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <otherwise>
                        and false
                    </otherwise>
                </choose>
            </otherwise>
        </choose>
    </sql>

    <!--查询操作构造器 -->
    <sql id="Wrapper_Op_Clause">
        <choose>
            <when test="criterion.op.type == 'eq'">
                = #{criterion.value}
            </when>
            <when test="criterion.op.type == 'ne'">
                != #{criterion.value}
            </when>
            <when test="criterion.op.type == 'gt'">
                <![CDATA[ > #{criterion.value} ]]>
            </when>
            <when test="criterion.op.type == 'ge'">
                <![CDATA[ >= #{criterion.value} ]]>
            </when>
            <when test="criterion.op.type == 'lt'">
                <![CDATA[ < #{criterion.value} ]]>
            </when>
            <when test="criterion.op.type == 'le'">
                <![CDATA[ <= #{criterion.value} ]]>
            </when>
            <when test="criterion.op.type == 'like'">
                <![CDATA[ LIKE CONCAT('%',LOWER(#{criterion.value}),'%')]]>
            </when>
            <when test="criterion.op.type == 'notLike'">
                <![CDATA[ NOT LIKE CONCAT('%',LOWER(#{criterion.value}),'%') ]]>
            </when>
            <when test="criterion.op.type == 'isNull'">
                is null
            </when>
            <when test="criterion.op.type == 'isNotNull'">
                is not null
            </when>
            <when test="criterion.op.type == 'in'">
                in
                <foreach collection="criterion.value" item="value" separator="," open="(" close=")">
                    #{value}
                </foreach>
            </when>
            <when test="criterion.op.type == 'notIn'">
                not in
                <foreach collection="criterion.value" item="value" separator="," open="(" close=")">
                    #{value}
                </foreach>
            </when>
            <when test="criterion.op.type == 'between'">
                BETWEEN #{criterion.value} and #{criterion.secondValue}
            </when>
            <when test="criterion.op.type == 'notBetween'">
                NOT BETWEEN #{criterion.value} and #{criterion.secondValue}
            </when>
        </choose>
    </sql>

    <!--构造排序条件 -->
    <sql id="Wrapper_Order_Clause">
        <if test="wp.sorts != null">
            <foreach collection="wp.sorts" open=" order by " item="st" separator=",">
                <choose>
                    <when test="st.attr == 'id'">
                        `id` ${st.order.type}
                    </when>
                    <when test="st.attr == 'key'">
                        `key` ${st.order.type}
                    </when>
                    <when test="st.attr == 'value'">
                        `value` ${st.order.type}
                    </when>
                    <when test="st.attr == 'looupId'">
                        `looup_id` ${st.order.type}
                    </when>
                    <when test="st.attr == 'createdBy'">
                        `created_by` ${st.order.type}
                    </when>
                    <when test="st.attr == 'createdDate'">
                        `created_date` ${st.order.type}
                    </when>
                    <when test="st.attr == 'lastUpdateBy'">
                        `last_update_by` ${st.order.type}
                    </when>
                    <when test="st.attr == 'lastUpdateDate'">
                        `last_update_date` ${st.order.type}
                    </when>
                </choose>
            </foreach>
        </if>
    </sql>

    <!--根据主键信息查询返回实体对象 -->
    <select id="findById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from lookup_config
        where `id` = #{id,jdbcType=VARCHAR}
    </select>

    <!--根据实体对象信息查询返回实体对象 -->
    <select id="query" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from lookup_config
        <include refid="Base_Where_Clause" />
    </select>

    <!--根据实体对象信息查询返回实体对象集合 -->
    <select id="findList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from lookup_config
        <if test="_parameter != null">
            <include refid="Base_Where_Clause" />
        </if>
    </select>
    
    <!--根据主键信息删除实体对象 -->
    <delete id="deleteById" parameterType="java.io.Serializable">
        delete from lookup_config
        where `id` = #{id,jdbcType=VARCHAR}
    </delete>
    
    <!--根据实体对象删除数据-->
    <delete id="delete" parameterType="com.zhuoxun.it.base.entity.LookupConfigVO">
        delete from lookup_config
        <include refid="Base_Where_Clause" />
    </delete>

    <!--根据实体对象删除数据-->
    <delete id="deletes" parameterType="com.zhuoxun.it.base.entity.LookupConfigVO">
        delete from lookup_config where `id` in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item.attrName}
        </foreach>
    </delete>

    <!--插入实体对象 -->
    <insert id="insert" parameterType="com.zhuoxun.it.base.entity.LookupConfigVO">
        <selectKey order="BEFORE" resultType="java.lang.String" keyProperty="id">
            select uuid() 
        </selectKey>
        insert into lookup_config
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                `id`,
            </if>
            <if test="key != null">
                `key`,
            </if>
            <if test="value != null">
                `value`,
            </if>
            <if test="looupId != null">
                `looup_id`,
            </if>
            <if test="createdBy != null">
                `created_by`,
            </if>
            <if test="createdDate != null or createdDate == null">
                `created_date`,
            </if>
            <if test="lastUpdateBy != null">
                `last_update_by`,
            </if>
            <if test="lastUpdateDate != null or lastUpdateDate == null">
                `last_update_date`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="key != null">
                #{key,jdbcType=VARCHAR},
            </if>
            <if test="value != null">
                #{value,jdbcType=VARCHAR},
            </if>
            <if test="looupId != null">
                #{looupId,jdbcType=VARCHAR},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="createdDate != null or createdDate == null">
                current_timestamp(),
            </if>
            <if test="lastUpdateBy != null">
                #{lastUpdateBy,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdateDate != null or lastUpdateDate == null">
                current_timestamp(),
            </if>
        </trim>
    </insert>

    <!--插入实体对象 -->
    <insert id="inserts" parameterType="com.zhuoxun.it.base.entity.LookupConfigVO">
        insert into lookup_config
        <trim prefix="(" suffix=") values" suffixOverrides=",">
            `id`,
            `key`,
            `value`,
            `looup_id`,
            `created_by`,
            `created_date`,
            `last_update_by`,
            `last_update_date`
        </trim>
        <foreach collection="list" item="item" index="index" separator=",">
            (
            UUID(),
            #{item.key,jdbcType=VARCHAR},
            #{item.value,jdbcType=VARCHAR},
            #{item.looupId,jdbcType=VARCHAR},
            #{item.createdBy,jdbcType=VARCHAR},
            current_timestamp(),
            #{item.lastUpdateBy,jdbcType=VARCHAR},
            current_timestamp()
            )
        </foreach>
    </insert>

    <!--更新实体对象 -->
    <update id="update">
        update lookup_config
        <set>
            <if test="entity.key != null">
                `key` = #{entity.key,jdbcType=VARCHAR},
            </if>
            <if test="entity.value != null">
                `value` = #{entity.value,jdbcType=VARCHAR},
            </if>
            <if test="entity.looupId != null">
                `looup_id` = #{entity.looupId,jdbcType=VARCHAR},
            </if>
            <if test="entity.lastUpdateBy != null">
                `last_update_by` = #{entity.lastUpdateBy,jdbcType=VARCHAR},
            </if>
            <if test="entity.lastUpdateDate == null or entity.lastUpdateDate != null">
                `last_update_date` = current_timestamp(),
            </if>
        </set>
        where `id` = #{entity.id,jdbcType=VARCHAR}
    </update>

    <!--构造器查询 -->
    <select id="queryByWrapper" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from lookup_config
        <if test="wp != null">
            <include refid="Wrapper_Where_Clause" />
        </if>
    </select>
    
    <!--构造器查询 -->
    <select id="findByWrapper" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from lookup_config
        <if test="wp != null">
            <include refid="Wrapper_Where_Clause" />
            <include refid="Wrapper_Order_Clause" />
        </if>
    </select>

    <!--更新实体对象 -->
    <update id="updateByWrapper">
        update lookup_config
        <set>
            <if test="entity.id != null">
                `id` = #{entity.id,jdbcType=VARCHAR},
            </if>
            <if test="entity.key != null">
                `key` = #{entity.key,jdbcType=VARCHAR},
            </if>
            <if test="entity.value != null">
                `value` = #{entity.value,jdbcType=VARCHAR},
            </if>
            <if test="entity.looupId != null">
                `looup_id` = #{entity.looupId,jdbcType=VARCHAR},
            </if>
            <if test="entity.lastUpdateBy != null">
                `last_update_by` = #{entity.lastUpdateBy,jdbcType=VARCHAR},
            </if>
            <if test="entity.lastUpdateDate == null or entity.lastUpdateDate != null">
                `last_update_date` = current_timestamp(),
            </if>
        </set>
        <include refid="Wrapper_Where_Clause" />
    </update>
    
    <!--根据实体对象删除数据-->
    <delete id="deleteByWrapper">
        delete from lookup_config
        <include refid="Wrapper_Where_Clause" />
    </delete>

</mapper>