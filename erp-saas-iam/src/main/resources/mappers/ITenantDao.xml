<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhuoxun.it.iam.dao.ITenantDao">

    <!--基础字段返回信息配置 -->
    <resultMap id="BaseResultMap" type="com.zhuoxun.it.iam.entity.TenantVO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode" />
        <result column="tenant_name" jdbcType="VARCHAR" property="tenantName" />
        <result column="tenant_type" jdbcType="VARCHAR" property="tenantType" />
        <result column="province" jdbcType="VARCHAR" property="province" />
        <result column="city" jdbcType="VARCHAR" property="city" />
        <result column="area" jdbcType="VARCHAR" property="area" />
        <result column="address" jdbcType="VARCHAR" property="address" />
        <result column="credit_code" jdbcType="VARCHAR" property="creditCode" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="effective_date" jdbcType="TIMESTAMP" property="effectiveDate" />
        <result column="state" jdbcType="INTEGER" property="state" />
        <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
        <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
        <result column="last_update_by" jdbcType="VARCHAR" property="lastUpdateBy" />
        <result column="last_update_date" jdbcType="TIMESTAMP" property="lastUpdateDate" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
    </resultMap>

    <!--基础字段信息配置 -->
    <sql id="Base_Column_List">
        `id`,`tenant_code`,`tenant_name`,`tenant_type`,`province`,
        `city`,`area`,`address`,`credit_code`,`user_name`,`phone`,
        `effective_date`,`state`,`created_by`,`created_date`,`last_update_by`,`last_update_date`,
        `remark`
    </sql>

    <!--基础条件查询配置 -->
    <sql id="Base_Where_Clause">
        <where>
            <if test="entity.id != null">
                and `id` = #{entity.id,jdbcType=VARCHAR}
            </if>
            <if test="entity.tenantCode != null">
                and `tenant_code` = #{entity.tenantCode,jdbcType=VARCHAR}
            </if>
            <if test="entity.tenantName != null">
                and `tenant_name` = #{entity.tenantName,jdbcType=VARCHAR}
            </if>
            <if test="entity.tenantType != null">
                and `tenant_type` = #{entity.tenantType,jdbcType=VARCHAR}
            </if>
            <if test="entity.province != null">
                and `province` = #{entity.province,jdbcType=VARCHAR}
            </if>
            <if test="entity.city != null">
                and `city` = #{entity.city,jdbcType=VARCHAR}
            </if>
            <if test="entity.area != null">
                and `area` = #{entity.area,jdbcType=VARCHAR}
            </if>
            <if test="entity.address != null">
                and `address` = #{entity.address,jdbcType=VARCHAR}
            </if>
            <if test="entity.creditCode != null">
                and `credit_code` = #{entity.creditCode,jdbcType=VARCHAR}
            </if>
            <if test="entity.userName != null">
                and `user_name` = #{entity.userName,jdbcType=VARCHAR}
            </if>
            <if test="entity.phone != null">
                and `phone` = #{entity.phone,jdbcType=VARCHAR}
            </if>
            <if test="entity.effectiveDate != null">
                and `effective_date` = #{entity.effectiveDate,jdbcType=TIMESTAMP}
            </if>
            <if test="entity.state != null">
                and `state` = #{entity.state,jdbcType=INTEGER}
            </if>
            <if test="entity.createdBy != null">
                and `created_by` = #{entity.createdBy,jdbcType=VARCHAR}
            </if>
            <if test="entity.createdDate != null">
                and `created_date` = #{entity.createdDate,jdbcType=TIMESTAMP}
            </if>
            <if test="entity.lastUpdateBy != null">
                and `last_update_by` = #{entity.lastUpdateBy,jdbcType=VARCHAR}
            </if>
            <if test="entity.lastUpdateDate != null">
                and `last_update_date` = #{entity.lastUpdateDate,jdbcType=TIMESTAMP}
            </if>
            <if test="entity.remark != null">
                and `remark` = #{entity.remark,jdbcType=VARCHAR}
            </if>
        </where>
    </sql>

    <!--构造条件 -->
    <sql id="Wrapper_Where_Clause">
        <where>
            <foreach collection="wp.criterias" item="criteria" separator="or">
                <trim prefix="(" prefixOverrides="and" suffix=")">
                    <foreach collection="criteria.criterions" item="criterion">
                         <include refid="Wrapper_Where_Op_Clause"></include>
                    </foreach>
                </trim>
            </foreach>
        </where>
    </sql>

    <!--构造操作条件 -->
    <sql id="Wrapper_Where_Op_Clause">
        <choose>
            <when test="criterion.op.type == 'like' or criterion.op.type == 'notLike'">
                <choose>
                    <when test="criterion.attr == 'id'">
                        and LOWER(`id`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'tenantCode'">
                        and LOWER(`tenant_code`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'tenantName'">
                        and LOWER(`tenant_name`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'tenantType'">
                        and LOWER(`tenant_type`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'province'">
                        and LOWER(`province`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'city'">
                        and LOWER(`city`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'area'">
                        and LOWER(`area`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'address'">
                        and LOWER(`address`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'creditCode'">
                        and LOWER(`credit_code`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'userName'">
                        and LOWER(`user_name`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'phone'">
                        and LOWER(`phone`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'effectiveDate'">
                        and LOWER(`effective_date`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'state'">
                        and LOWER(`state`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'createdBy'">
                        and LOWER(`created_by`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'createdDate'">
                        and LOWER(`created_date`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'lastUpdateBy'">
                        and LOWER(`last_update_by`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'lastUpdateDate'">
                        and LOWER(`last_update_date`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'remark'">
                        and LOWER(`remark`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <otherwise>
                        and false
                    </otherwise>
                </choose>
            </when>
            <otherwise>
                <choose>
                    <when test="criterion.attr == 'id'">
                        and `id`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'tenantCode'">
                        and `tenant_code`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'tenantName'">
                        and `tenant_name`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'tenantType'">
                        and `tenant_type`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'province'">
                        and `province`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'city'">
                        and `city`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'area'">
                        and `area`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'address'">
                        and `address`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'creditCode'">
                        and `credit_code`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'userName'">
                        and `user_name`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'phone'">
                        and `phone`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'effectiveDate'">
                        and `effective_date`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'state'">
                        and `state`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'createdBy'">
                        and `created_by`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'createdDate'">
                        and `created_date`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'lastUpdateBy'">
                        and `last_update_by`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'lastUpdateDate'">
                        and `last_update_date`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'remark'">
                        and `remark`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <otherwise>
                        and false
                    </otherwise>
                </choose>
            </otherwise>
        </choose>
    </sql>

    <!--查询操作构造器 -->
    <sql id="Wrapper_Op_Clause">
        <choose>
            <when test="criterion.op.type == 'eq'">
                = #{criterion.value}
            </when>
            <when test="criterion.op.type == 'ne'">
                != #{criterion.value}
            </when>
            <when test="criterion.op.type == 'gt'">
                <![CDATA[ > #{criterion.value} ]]>
            </when>
            <when test="criterion.op.type == 'ge'">
                <![CDATA[ >= #{criterion.value} ]]>
            </when>
            <when test="criterion.op.type == 'lt'">
                <![CDATA[ < #{criterion.value} ]]>
            </when>
            <when test="criterion.op.type == 'le'">
                <![CDATA[ <= #{criterion.value} ]]>
            </when>
            <when test="criterion.op.type == 'like'">
                <![CDATA[ LIKE CONCAT('%',LOWER(#{criterion.value}),'%')]]>
            </when>
            <when test="criterion.op.type == 'notLike'">
                <![CDATA[ NOT LIKE CONCAT('%',LOWER(#{criterion.value}),'%') ]]>
            </when>
            <when test="criterion.op.type == 'isNull'">
                is null
            </when>
            <when test="criterion.op.type == 'isNotNull'">
                is not null
            </when>
            <when test="criterion.op.type == 'in'">
                in
                <foreach collection="criterion.value" item="value" separator="," open="(" close=")">
                    #{value}
                </foreach>
            </when>
            <when test="criterion.op.type == 'notIn'">
                not in
                <foreach collection="criterion.value" item="value" separator="," open="(" close=")">
                    #{value}
                </foreach>
            </when>
            <when test="criterion.op.type == 'between'">
                BETWEEN #{criterion.value} and #{criterion.secondValue}
            </when>
            <when test="criterion.op.type == 'notBetween'">
                NOT BETWEEN #{criterion.value} and #{criterion.secondValue}
            </when>
        </choose>
    </sql>

    <!--构造排序条件 -->
    <sql id="Wrapper_Order_Clause">
        <if test="wp.sorts != null">
            <foreach collection="wp.sorts" open=" order by " item="st" separator=",">
                <choose>
                    <when test="st.attr == 'id'">
                        `id` ${st.order.type}
                    </when>
                    <when test="st.attr == 'tenantCode'">
                        `tenant_code` ${st.order.type}
                    </when>
                    <when test="st.attr == 'tenantName'">
                        `tenant_name` ${st.order.type}
                    </when>
                    <when test="st.attr == 'tenantType'">
                        `tenant_type` ${st.order.type}
                    </when>
                    <when test="st.attr == 'province'">
                        `province` ${st.order.type}
                    </when>
                    <when test="st.attr == 'city'">
                        `city` ${st.order.type}
                    </when>
                    <when test="st.attr == 'area'">
                        `area` ${st.order.type}
                    </when>
                    <when test="st.attr == 'address'">
                        `address` ${st.order.type}
                    </when>
                    <when test="st.attr == 'creditCode'">
                        `credit_code` ${st.order.type}
                    </when>
                    <when test="st.attr == 'userName'">
                        `user_name` ${st.order.type}
                    </when>
                    <when test="st.attr == 'phone'">
                        `phone` ${st.order.type}
                    </when>
                    <when test="st.attr == 'effectiveDate'">
                        `effective_date` ${st.order.type}
                    </when>
                    <when test="st.attr == 'state'">
                        `state` ${st.order.type}
                    </when>
                    <when test="st.attr == 'createdBy'">
                        `created_by` ${st.order.type}
                    </when>
                    <when test="st.attr == 'createdDate'">
                        `created_date` ${st.order.type}
                    </when>
                    <when test="st.attr == 'lastUpdateBy'">
                        `last_update_by` ${st.order.type}
                    </when>
                    <when test="st.attr == 'lastUpdateDate'">
                        `last_update_date` ${st.order.type}
                    </when>
                    <when test="st.attr == 'remark'">
                        `remark` ${st.order.type}
                    </when>
                </choose>
            </foreach>
        </if>
    </sql>

    <!--根据主键信息查询返回实体对象 -->
    <select id="findById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tenant
        where `id` = #{id,jdbcType=VARCHAR}
    </select>

    <!--根据实体对象信息查询返回实体对象 -->
    <select id="query" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tenant
        <include refid="Base_Where_Clause" />
    </select>

    <!--根据实体对象信息查询返回实体对象集合 -->
    <select id="findList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tenant
        <if test="_parameter != null">
            <include refid="Base_Where_Clause" />
        </if>
    </select>
    
    <!--根据主键信息删除实体对象 -->
    <delete id="deleteById" parameterType="java.io.Serializable">
        delete from tenant
        where `id` = #{id,jdbcType=VARCHAR}
    </delete>
    
    <!--根据实体对象删除数据-->
    <delete id="delete" parameterType="com.zhuoxun.it.iam.entity.TenantVO">
        delete from tenant
        <include refid="Base_Where_Clause" />
    </delete>

    <!--根据实体对象删除数据-->
    <delete id="deletes" parameterType="com.zhuoxun.it.iam.entity.TenantVO">
        delete from tenant where `id` in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item.attrName}
        </foreach>
    </delete>

    <!--插入实体对象 -->
    <insert id="insert" parameterType="com.zhuoxun.it.iam.entity.TenantVO">
        <selectKey order="BEFORE" resultType="java.lang.String" keyProperty="id">
            select uuid() 
        </selectKey>
        insert into tenant
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                `id`,
            </if>
            <if test="tenantCode != null">
                `tenant_code`,
            </if>
            <if test="tenantName != null">
                `tenant_name`,
            </if>
            <if test="tenantType != null">
                `tenant_type`,
            </if>
            <if test="province != null">
                `province`,
            </if>
            <if test="city != null">
                `city`,
            </if>
            <if test="area != null">
                `area`,
            </if>
            <if test="address != null">
                `address`,
            </if>
            <if test="creditCode != null">
                `credit_code`,
            </if>
            <if test="userName != null">
                `user_name`,
            </if>
            <if test="phone != null">
                `phone`,
            </if>
            <if test="effectiveDate != null">
                `effective_date`,
            </if>
            <if test="state != null">
                `state`,
            </if>
            <if test="createdBy != null">
                `created_by`,
            </if>
            <if test="createdDate != null or createdDate == null">
                `created_date`,
            </if>
            <if test="lastUpdateBy != null">
                `last_update_by`,
            </if>
            <if test="lastUpdateDate != null or lastUpdateDate == null">
                `last_update_date`,
            </if>
            <if test="remark != null">
                `remark`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="tenantCode != null">
                #{tenantCode,jdbcType=VARCHAR},
            </if>
            <if test="tenantName != null">
                #{tenantName,jdbcType=VARCHAR},
            </if>
            <if test="tenantType != null">
                #{tenantType,jdbcType=VARCHAR},
            </if>
            <if test="province != null">
                #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                #{city,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                #{area,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="creditCode != null">
                #{creditCode,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="effectiveDate != null">
                #{effectiveDate,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="createdDate != null or createdDate == null">
                current_timestamp(),
            </if>
            <if test="lastUpdateBy != null">
                #{lastUpdateBy,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdateDate != null or lastUpdateDate == null">
                current_timestamp(),
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <!--插入实体对象 -->
    <insert id="inserts" parameterType="com.zhuoxun.it.iam.entity.TenantVO">
        insert into tenant
        <trim prefix="(" suffix=") values" suffixOverrides=",">
            `id`,
            `tenant_code`,
            `tenant_name`,
            `tenant_type`,
            `province`,
            `city`,
            `area`,
            `address`,
            `credit_code`,
            `user_name`,
            `phone`,
            `effective_date`,
            `state`,
            `created_by`,
            `created_date`,
            `last_update_by`,
            `last_update_date`,
            `remark`
        </trim>
        <foreach collection="list" item="item" index="index" separator=",">
            (
            UUID(),
            #{tenantCode,jdbcType=VARCHAR},
            #{tenantName,jdbcType=VARCHAR},
            #{tenantType,jdbcType=VARCHAR},
            #{province,jdbcType=VARCHAR},
            #{city,jdbcType=VARCHAR},
            #{area,jdbcType=VARCHAR},
            #{address,jdbcType=VARCHAR},
            #{creditCode,jdbcType=VARCHAR},
            #{userName,jdbcType=VARCHAR},
            #{phone,jdbcType=VARCHAR},
            #{effectiveDate,jdbcType=TIMESTAMP},
            #{state,jdbcType=INTEGER},
            #{createdBy,jdbcType=VARCHAR},
            current_timestamp(),
            #{lastUpdateBy,jdbcType=VARCHAR},
            current_timestamp(),
            #{remark,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <!--更新实体对象 -->
    <update id="update">
        update tenant
        <set>
            <if test="entity.tenantCode != null">
                `tenant_code` = #{entity.tenantCode,jdbcType=VARCHAR},
            </if>
            <if test="entity.tenantName != null">
                `tenant_name` = #{entity.tenantName,jdbcType=VARCHAR},
            </if>
            <if test="entity.tenantType != null">
                `tenant_type` = #{entity.tenantType,jdbcType=VARCHAR},
            </if>
            <if test="entity.province != null">
                `province` = #{entity.province,jdbcType=VARCHAR},
            </if>
            <if test="entity.city != null">
                `city` = #{entity.city,jdbcType=VARCHAR},
            </if>
            <if test="entity.area != null">
                `area` = #{entity.area,jdbcType=VARCHAR},
            </if>
            <if test="entity.address != null">
                `address` = #{entity.address,jdbcType=VARCHAR},
            </if>
            <if test="entity.creditCode != null">
                `credit_code` = #{entity.creditCode,jdbcType=VARCHAR},
            </if>
            <if test="entity.userName != null">
                `user_name` = #{entity.userName,jdbcType=VARCHAR},
            </if>
            <if test="entity.phone != null">
                `phone` = #{entity.phone,jdbcType=VARCHAR},
            </if>
            <if test="entity.effectiveDate != null">
                `effective_date` = #{entity.effectiveDate,jdbcType=TIMESTAMP},
            </if>
            <if test="entity.state != null">
                `state` = #{entity.state,jdbcType=INTEGER},
            </if>
            <if test="entity.lastUpdateBy != null">
                `last_update_by` = #{entity.lastUpdateBy,jdbcType=VARCHAR},
            </if>
            <if test="entity.lastUpdateDate == null or entity.lastUpdateDate != null">
                `last_update_date` = current_timestamp(),
            </if>
            <if test="entity.remark != null">
                `remark` = #{entity.remark,jdbcType=VARCHAR},
            </if>
        </set>
        where `id` = #{entity.id,jdbcType=VARCHAR}
    </update>

    <!--构造器查询 -->
    <select id="queryByWrapper" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tenant
        <if test="wp != null">
            <include refid="Wrapper_Where_Clause" />
        </if>
    </select>
    
    <!--构造器查询 -->
    <select id="findByWrapper" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tenant
        <if test="wp != null">
            <include refid="Wrapper_Where_Clause" />
            <include refid="Wrapper_Order_Clause" />
        </if>
    </select>

    <!--更新实体对象 -->
    <update id="updateByWrapper">
        update tenant
        <set>
            <if test="entity.id != null">
                `id` = #{entity.id,jdbcType=VARCHAR},
            </if>
            <if test="entity.tenantCode != null">
                `tenant_code` = #{entity.tenantCode,jdbcType=VARCHAR},
            </if>
            <if test="entity.tenantName != null">
                `tenant_name` = #{entity.tenantName,jdbcType=VARCHAR},
            </if>
            <if test="entity.tenantType != null">
                `tenant_type` = #{entity.tenantType,jdbcType=VARCHAR},
            </if>
            <if test="entity.province != null">
                `province` = #{entity.province,jdbcType=VARCHAR},
            </if>
            <if test="entity.city != null">
                `city` = #{entity.city,jdbcType=VARCHAR},
            </if>
            <if test="entity.area != null">
                `area` = #{entity.area,jdbcType=VARCHAR},
            </if>
            <if test="entity.address != null">
                `address` = #{entity.address,jdbcType=VARCHAR},
            </if>
            <if test="entity.creditCode != null">
                `credit_code` = #{entity.creditCode,jdbcType=VARCHAR},
            </if>
            <if test="entity.userName != null">
                `user_name` = #{entity.userName,jdbcType=VARCHAR},
            </if>
            <if test="entity.phone != null">
                `phone` = #{entity.phone,jdbcType=VARCHAR},
            </if>
            <if test="entity.effectiveDate != null">
                `effective_date` = #{entity.effectiveDate,jdbcType=TIMESTAMP},
            </if>
            <if test="entity.state != null">
                `state` = #{entity.state,jdbcType=INTEGER},
            </if>
            <if test="entity.lastUpdateBy != null">
                `last_update_by` = #{entity.lastUpdateBy,jdbcType=VARCHAR},
            </if>
            <if test="entity.lastUpdateDate == null or entity.lastUpdateDate != null">
                `last_update_date` = current_timestamp(),
            </if>
            <if test="entity.remark != null">
                `remark` = #{entity.remark,jdbcType=VARCHAR},
            </if>
        </set>
        <include refid="Wrapper_Where_Clause" />
    </update>
    
    <!--根据实体对象删除数据-->
    <delete id="deleteByWrapper">
        delete from tenant
        <include refid="Wrapper_Where_Clause" />
    </delete>

</mapper>